///////////////////////////////////////////////////////////
//  Patente.cs
//  Implementation of the Class Patente
//  Generated by Enterprise Architect
//  Created on:      20-abr.-2023 19:35:20
//  Original author: gasto
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



namespace Services.Domain.Composite
{
    /// <summary>
    /// This class (a) represents leaf objects in the composition, and (b) defines
    /// behaviour for primitive objects in the composition.
    /// </summary>
    public class Patente : Component
    {

        public String FormName { get; set; }

        public String MenuName { get; set; }

        public Patente PatentePadre { get; set; }

        public Patente()
        {

        }

        /// 
        /// <param name="component"></param>
        public override void Add(Component component)
        {
            throw new Exception("No se pueden agregar elementos a una patente...");
        }

        public override int CountChild()
        {
            return 0;
        }

        /// 
        /// <param name="component"></param>
        public override void Remove(Component component)
        {
            throw new Exception("No se pueden remover elementos a una patente...");
        }

    }//end Patente
}