///////////////////////////////////////////////////////////
//  Investor .cs
//  Implementation of the Class Investor 
//  Generated by Enterprise Architect
//  Created on:      05-jun.-2023 19:32:01
//  Original author: gasto
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;



using Observador;
namespace Observador {
	/// <summary>
	/// This class maintains a reference to a ConcreteSubject object, stores state that
	/// should stay consistent with the subject's and implements the Observer updating
	/// interface to keep its state consistent with the subject's.
	/// </summary>
	public class Investor  : IInvestor {

        private string name;

        private Stock stock;
        // Constructor
        public Investor(string name)
        {
            this.name = name;
        }
        public void Update(Stock stock)
        {
            Console.WriteLine("Notified {0} of {1}'s " +
                "change to {2:C}", name, stock.Symbol, stock.Price);
        }
        // Gets or sets the stock
        public Stock Stock
        {
            get { return stock; }
            set { stock = value; }
        }

    }//end Investor 

}//end namespace Observador